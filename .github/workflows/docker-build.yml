name: 自动构建并推送到GHCR

# 触发条件：推main分支（更latest）、打v*标签（发版）、PR仅验证
on:
  push:
    branches: [ main ]  # 推main分支→更新 ghcr.io/dxy0427/cloudstream:latest
    tags: [ 'v*' ]      # 打Tag（如v1.0.0）→ 推 ghcr.io/dxy0427/cloudstream:v1.0.0
  pull_request:
    branches: [ main ]  # PR时仅构建不推送（避免垃圾镜像）

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 核心：配置内置GITHUB_TOKEN的权限（无需手动令牌）
    permissions:
      packages: write  # 允许推送镜像到GHCR（必需）
      contents: read   # 允许读取仓库代码（必需）
      actions: read    # 可选：避免不必要的权限警告
    steps:
      # 1. 检出代码
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置Docker Buildx（支持多平台构建）
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. 登录GHCR（自动用内置GITHUB_TOKEN，无需手动Secrets！）
      - name: 登录GitHub Container Registry
        if: github.event_name != 'pull_request'  # PR时不登录、不推送
        uses: docker/login-action@v3
        with:
          registry: ghcr.io  # 固定GHCR域名
          # 自动使用GitHub内置身份：用户名=仓库所有者（dxy0427），密码=内置令牌
          username: ${{ github.actor }}          # 自动获取当前仓库所有者（即dxy0427）
          password: ${{ github.token }}          # 内置令牌（无需手动生成，GitHub自动注入）

      # 4. 缓存加速（减少重复构建时间）
      - name: 缓存Go模块
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: 缓存Docker层
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 5. 构建并推送到GHCR（最终镜像地址：ghcr.io/dxy0427/cloudstream:xxx）
      - name: 构建并推送镜像
        uses: docker/build-push-action@v5
        with:
          context: .                          # 项目根目录（与Dockerfile匹配）
          file: ./Dockerfile                   # Dockerfile路径
          push: ${{ github.event_name != 'pull_request' }}  # PR时不推送
          platforms: linux/amd64,linux/arm64  # 多平台（适配x86/ARM，可选）
          # 镜像标签：自动匹配你的需求（ghcr.io/dxy0427/cloudstream:latest）
          tags: |
            ghcr.io/${{ github.actor }}/cloudstream:latest  # main分支→latest标签
            ghcr.io/${{ github.actor }}/cloudstream:${{ github.ref_name }}  # 分支/Tag→对应标签（如v1.0.0）
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # 6. 清理缓存
      - name: 清理缓存
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
